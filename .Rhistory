as.character(quantile(round(df[[variable]],0),
c(.01,.2,.4,.6,.8), na.rm=T))
} else if (rnd == FALSE | rnd == F) {
as.character(formatC(quantile(df[[variable]]), digits = 3),
c(.01,.2,.4,.6,.8), na.rm=T)
}
}
q5 <- function(variable) {as.factor(ntile(variable, 5))}
nn_function <- function(measureFrom,measureTo,k) {
measureFrom_Matrix <- as.matrix(measureFrom)
measureTo_Matrix <- as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
#######################
# Data Loading Part 1
######################
amsneighb <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=GEBIED_STADSDELEN&THEMA=gebiedsindeling")
plot(amsneighb)
knitr::opts_chunk$set(echo = TRUE)
root.dir = "https://github.com/amghazzawi/airbnb-predictions"
library(tidyverse)
library(tidycensus)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(stargazer)
library(grid)
library(gridExtra)
library(ggcorrplot)
library(dplyr)
library(mapview)
library(jtools)
library(ggmap)
library(RColorBrewer)
library(wesanderson)
library(viridis)
library(broom)
library(rmarkdown)
library(knitr)
library(kableExtra)
#######################
#LOADING SET UP PART 2
######################
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2)
)
}
plotTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=2),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
axis.title = element_text(size=12),
axis.text = element_text(size=10),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"),
strip.text.x = element_text(size = 14)
)
}
palette5 <- c("#FFF717", "#E8BC1C", "#FFAE2B",   "#E86E23", "#FF5940")
palette4 <- c( "#53AAEE", "#438AC3", "#306490" , "#1F4363", "#16314B")
#Set up quintile breaks for map legends
qBr <- function(df, variable, rnd) {
if (missing(rnd)) {
as.character(quantile(round(df[[variable]],0),
c(.01,.2,.4,.6,.8), na.rm=T))
} else if (rnd == FALSE | rnd == F) {
as.character(formatC(quantile(df[[variable]]), digits = 3),
c(.01,.2,.4,.6,.8), na.rm=T)
}
}
q5 <- function(variable) {as.factor(ntile(variable, 5))}
nn_function <- function(measureFrom,measureTo,k) {
measureFrom_Matrix <- as.matrix(measureFrom)
measureTo_Matrix <- as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
#######################
# Data Loading Part 1
######################
listings <- read_csv("https://raw.githubusercontent.com/amghazzawi/airbnb-predictions/main/listings.csv?token=AQ3VEIT2USJ4T5L25RWWQI27XM33Q")
#######################
# Data Loading Part 1
######################
listings <- read_csv("https://raw.githubusercontent.com/amghazzawi/airbnb-predictions/main/listings.csv?token=AQ3VEIT2USJ4T5L25RWWQI27XM33Q")
#######################
# Data Loading Part 1
######################
listings <- read_csv("https://github.com/amghazzawi/airbnb-predictions/blob/main/listings.csv")
#######################
# Data Loading Part 1
######################
listings <- read_csv("listings.csv")
districts <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=GEBIED_STADSDELEN&THEMA=gebiedsindeling")
neighborhoods <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=GEBIED_BUURTEN&THEMA=gebiedsindeling")
zipcode4 <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=PC4_BUURTEN&THEMA=postcode")
land_use <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=GRONDGEBRUIK_2017&THEMA=grondgebruik")
student_housing <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=JONGERENSTUDENTENHUISVESTING&THEMA=jongerenstudentenhuisvesting")
overnight <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=OVERNACHTINGSBELEID&THEMA=overnachtingsbeleid")
green_roofs <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=GROENE_DAKEN&THEMA=groene_daken")
parks <- st_read("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=PARKPLANTSOENGROEN&THEMA=stadsparken")
farming <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=STADSLANDBOUW_PUNT&THEMA=stadslandbouw")
maj_streets <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=STADSSTRAAT&THEMA=stadsstraat")
metro_lines <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=TRAMMETRO_LIJNEN_2020&THEMA=trammetro")
metro_stops <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=TRAMMETRO_PUNTEN_2020&THEMA=trammetro")
walkability <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=WALKABILITY&THEMA=walkability")
hist_build <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=HISTORISCHE_BEBOUWING&THEMA=archeologie")
wall_art <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=WANDKUNST&THEMA=wandkunst")
barbecue <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=BBQ&THEMA=bbq")
dog_park <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=HONDEN_SPEELPLAATS&THEMA=honden")
markets <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=MARKTEN&THEMA=markten")
playgrounds <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=SPORT_OPENBAAR&THEMA=sport")
swim <- read_sf("https://maps.amsterdam.nl/open_geodata/geojson.php?KAARTLAAG=ZWEMWATER&THEMA=zwemwater")
neighborhoods.sf <- neighborhoods %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = neighborhoods.sf, fill = "grey60") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
districts.sf <- districts %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = districts.sf, fill = "grey60") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
districts.sf <- districts %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = districts.sf, fill = "grey60") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
districts.sf <- districts %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = districts.sf, fill = "black") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
districts.sf <- districts %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(districts.sf))
ggplot() +
geom_sf(data = districts.sf, fill = "black") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
zipcode.sf <- zipcode4 %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(zipcode.sf))
ggplot() +
geom_sf(data = zipcode.sf, fill = "black") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
zipcode.sf <- zipcode4 %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(zipcode.sf))
ggplot() +
geom_sf(data = zipcode.sf, fill = "black") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
zipcode.sf <- zipcode4 %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(zipcode.sf))
ggplot() +
geom_sf(data = zipcode.sf, fill = "black") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
ggplot() +
geom_sf(data = zipcode.sf, fill = "grey50") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
mapview (zipcode.sf)
mapview(neighborhoods.sf)
mapview(districts.sf)
neighborhoods.sf <- neighborhoods %>%
st_as_sf(coords = "geometry", crs = 28992, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 28992, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = neighborhoods.sf, fill = "grey60") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
neighborhoods.sf <- neighborhoods %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('ESRI:102658')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = neighborhoods.sf, fill = "grey60") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
neighborhoods.sf <- neighborhoods %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('EPSG:28992')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(neighborhoods.sf))
ggplot() +
geom_sf(data = neighborhoods.sf, fill = "grey60") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
districts.sf <- districts %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('EPSG:28992')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(districts.sf))
ggplot() +
geom_sf(data = districts.sf, fill = "black") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
zipcode.sf <- zipcode4 %>%
st_as_sf(coords = "geometry", crs = 4326, agr = "constant") %>%
st_transform('EPSG:28992')
listings.sf  <- listings %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant") %>%
st_transform(st_crs(zipcode.sf))
ggplot() +
geom_sf(data = zipcode.sf, fill = "grey50") +
geom_sf(data = listings.sf, aes(colour = q5(price)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette4,
labels = qBr(listings.sf, "price"),
name = "Nightly Airbnb Price\n(Quintile Breaks)") +
labs(title="Nightly Airbnb Price, Amsterdam",
subtitle = "Figure X") +
mapTheme()
install.packages("mapboxapi", dependencies = TRUE)
View(parks)
my_token <- "pk.eyJ1IjoiZGtoYW5ka2UiLCJhIjoiY2tnMmI1eDVtMDMwMTJ0cGQwY2NmNGNkNSJ9.kSDKluQUL8p3oIpkX1Qjvg"
library(mapboxapi)
mb_access_token(my_token, install = TRUE)
my_token <- "pk.eyJ1IjoiZGtoYW5ka2UiLCJhIjoiY2tnMmI1eDVtMDMwMTJ0cGQwY2NmNGNkNSJ9.kSDKluQUL8p3oIpkX1Qjvg"
library(mapboxapi)
mb_access_token(my_token)
library(leaflet)
library(mapboxapi)
mapbox_map <- leaflet() %>%
addMapboxTiles(style_id = "streets-v11",
username = "mapbox")
mapbox_map
library(leaflet)
library(mapboxapi)
mapbox_map <- leaflet() %>%
addMapboxTiles(style_id = "dark-v10",
username = "mapbox")
mapbox_map
library(leaflet)
library(mapboxapi)
mapbox_map <- leaflet() %>%
addMapboxTiles(style_id = "dark-v10",
username = "mapbox")
mapbox_map
afhaus <- mb_geocode("Westermarkt 20, 1016 GV Amsterdam, Netherlands")
afhaus #takes long lat pair and #tidygeocode package!
mapbox_map %>%
setView(lng = afhaus[1],
lat = afhaus[2],
zoom = 14)
mapbox_map %>%
setView(lng = afhaus[1],
lat = afhaus[2],
zoom = 10)
mapbox_map %>%
setView(lng = afhaus[1],
lat = afhaus[2],
zoom = 12)
colors <- viridisLite::viridis(3)
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
color = rev(colors),
fillColor = rev(colors),
fillOpacity = 0.5,
opacity = 1,
weight = 0.2) %>%
addLegend(labels = c(4, 8, 12),
colors = colors,
title = "Amsterdam Neighborhoods")
colors <- viridisLite::viridis(1)
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
color = rev(colors),
fillColor = rev(colors),
fillOpacity = 0.5,
opacity = 1,
weight = 0.2) %>%
addLegend(colors = colors,
title = "Amsterdam Neighborhoods")
colors <- viridisLite::viridis(1)
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
color = rev(colors),
fillColor = rev(colors),
fillOpacity = 0.5,
opacity = 1,
weight = 0.2) %>%
addLegend(labels = 1),
colors <- viridisLite::viridis(1)
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
color = rev(colors),
fillColor = rev(colors),
colors <- viridisLite::viridis(3)
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
color = rev(colors),
fillColor = rev(colors),
fillOpacity = 0.5,
opacity = 1,
weight = 0.2) %>%
addLegend(labels = c(4, 8, 12),
colors = colors,
title = "Amsterdam Neighborhoods")
pal <- colorNumeric("viridis", isos$time, na.color = "transparent")
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
fillColor = ~palette4),
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
fillColor = ~palette4),
mapbox_map %>%
addPolygons(data = neighborhoods.sf,
fillColor = ~palette4)
mapbox_map %>%
addPolygons(data = neighborhoods.sf
fillColor = ~palette4),
mapbox_map %>%
addPolygons(data = neighborhoods.sf)
fillColor = ~palette4),
mapbox_map %>%
addPolygons(data = neighborhoods.sf),
mapbox_map %>%
addPolygons(data = neighborhoods.sf)
mapbox_map %>%
addPolygons(data = neighborhoods)
mapbox_map %>%
addPolygons(data = districts)
mapbox_map %>%
addPolygons(data = districts),
mapbox_map %>%
addPolygons(data = districts),
mapbox_map %>%
addPolygons(data = districts),
mapbox_map %>%
addPolygons(data = districts)
library(leaflet)
library(mapboxapi)
mapbox_map <- leaflet() %>%
addMapboxTiles(style_id = "light-v10",
username = "mapbox")
mapbox_map
mapbox_map %>%
setView(lng = afhaus[1],
lat = afhaus[2],
zoom = 12)
mapbox_map %>%
addPolygons(data = districts)
mapview(districts.sf)
